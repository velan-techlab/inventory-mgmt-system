name: Inventory Service CI
on:
  push:
    paths:
      - 'inventory-service/**'
      - '.github/workflows/inventory-service.yml' 
  pull_request:
    paths:
      - 'inventory-service/**'
      - '.github/workflows/inventory-service.yml'
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Inventory Service
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0  # Fetch all history for accurate versioning
          show-tags: true  # Show tags in the checkout
          show-progress: true
          fetch-tags: true  # Fetch tags to ensure they are available for versioning
      - name: create git tag
        id: create_git_tag
        run : |
          # Fetch all tags to ensure accurate versioning
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          major=$(echo $latest_tag | cut -d'.' -f1)
          minor=$(echo $latest_tag | cut -d'.' -f2)
          patch=$(echo $latest_tag | cut -d'.' -f3)

          new_patch=$((patch + 1))
          new_tag="$major.$minor.$new_patch"

          echo "Latest tag: $latest_tag"
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
      - name: print env
        run : | 
           env | sort
           ls -a
           echo "$GITHUB_OUTPUT"
           echo "The version is ${{ steps.create_git_tag.outputs.VERSION }}"
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REPO_USERNAME }}
          password: ${{ secrets.REPO_PASSWORD }}
      - name: Docker Build
        uses: docker/build-push-action@v2
        with:
          context: ./inventory-service
          file: ./inventory-service/dockerfile
          push: true
          tags: |
            ${{ secrets.REPO_NAME }}/inventory-service:latest
            ${{ secrets.REPO_NAME }}/inventory-service:${{ steps.create_git_tag.outputs.new_tag }}
      - name: print env
        run : | 
           env | sort
           ls -a
           echo "$GITHUB_OUTPUT"
           echo "The version is ${{ steps.create_git_tag.outputs.VERSION }}"
      